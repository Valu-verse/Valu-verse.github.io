[[{"l":"Valu","p":["This website is to document the design of the Valu mobile app.","The User Experience","The design choices","Glossary of terms used"]}],[{"l":"Verus Ticketing Systems","p":["Welcome to the comprehensive guide on implementing ticketing systems using the Verus blockchain infrastructure. This section explores innovative approaches to digital ticketing that leverage Verus's unique identity primitives and blockchain capabilities."]},{"l":"Overview","p":["Traditional ticketing systems face numerous challenges including fraud, counterfeiting, scalability issues, and lack of true ownership transfer capabilities. The Verus blockchain offers novel solutions through its native identity system, providing two distinct approaches to digital ticket creation and management."]},{"l":"Key Features of Verus Ticketing"},{"l":"Blockchain-Native Identity System","p":["True Ownership: Tickets can represent genuine blockchain assets with provable ownership","Consensus Validation: Built-in blockchain primitive support ensures security and authenticity","Multi-signature Capability: Flexible control structures for various ticketing scenarios"]},{"l":"Flexible Implementation Options","p":["Method A: Identity-based tickets where each ticket is a unique Verus ID","Method B: Attestation-based tickets using signed data objects","Hybrid Approaches: Combining both methods for different ticket tiers"]},{"l":"Rich Data Storage","p":["Content Maps: Store up to ~ 4KB of ticket data directly on-chain","Merkle Trees: Support for zero-knowledge proofs and complex attestations","Structured Data: JSON-compatible data storage with cryptographic verification"]},{"l":"Use Cases"},{"l":"Concert and Event Ticketing","p":["Large venue events with thousands of attendees","Premium and VIP ticket experiences","Season passes and subscription-based access","Festival multi-day passes"]},{"l":"Corporate and Private Events","p":["Internal company events and conferences","Private gatherings and exclusive events","Training sessions and workshops","Membership-based access systems"]},{"l":"Transportation and Travel","p":["Flight and train ticket systems","Public transportation passes","Ride-sharing and taxi services","Parking and venue access"]},{"l":"Digital Assets and Collectibles","p":["Limited edition ticket collectibles","Commemorative event tokens","Fan club membership tokens","Historical event preservation"]},{"l":"Getting Started"},{"l":"Prerequisites","p":["Basic understanding of blockchain concepts","Verus CLI installed and configured","Access to Verus testnet for development","Sufficient VRSCTEST funds for transaction fees"]},{"l":"Documentation Structure","p":["This documentation is organized into the following sections:","Ticket Creation Methods: Comprehensive comparison of implementation approaches","Getting Started: Step-by-step guide for new implementations","Advanced Features: Complex ticketing scenarios and enterprise solutions","API Reference: Technical documentation for developers","Best Practices: Security, scalability, and user experience guidelines"]},{"l":"Upcoming Features","p":["Cross-chain ticket interoperability","Advanced smart contract integration","Enhanced mobile wallet support","Automated ticket distribution systems"]}],[{"l":"Creating Tickets on Verus Blockchain: A Comparative Analysis"},{"l":"Introduction","p":["The Verus blockchain offers unique capabilities for creating digital tickets through its innovative identity system. This document explores two distinct approaches to ticket creation on Verus, examining their mechanisms, advantages, disadvantages, and practical implications for real-world ticketing systems.","Unlike traditional blockchain approaches that rely on smart contracts, Verus provides native identity primitives that can serve as blockchain-native objects with built-in consensus validation. This fundamental difference opens up new possibilities for ticket creation and management."]},{"l":"Method A: Identity-Based Tickets (ID as Ticket)"},{"l":"Overview","p":["In this approach, each ticket is represented by a unique Verus Identity (ID). The ticket office creates individual IDs for each ticket, with the ID itself serving as the transferable ticket asset."]},{"l":"How It Works"},{"l":"Process Flow:"},{"i":"process-flow-1","l":"Process Flow:","p":["Parent ID Creation: Ticket office creates a parent identity (e.g., greendayconcert2025@)","Ticket ID Minting: For each ticket, create a sub-identity (e.g., ticket1.greendayconcert2025@)","Multi-signature Setup: Configure primary addresses with up to 15 keys","Shared Control Option: Include both ticket office and customer addresses for hybrid control","Transfer Mechanism: Update primary addresses to transfer ownership"]},{"l":"Technical Implementation:"},{"l":"Pros and Cons","p":["✅ Immutable Proof: Blockchain-verified ownership and authenticity","✅ Multi-signature Capability: Flexible control structures (1-15 keys)","✅ Native Blockchain Support: IDs are blockchain primitives with consensus validation","✅ No Intermediary Risk: Direct peer-to-peer transfers possible","✅ Rich Data Storage: Up to ~ 4KB of data per ticket in contentmap","✅ True Ownership: Complete control transfer without intermediaries","✅ Wallet Integration: Current Valu Mobile app supports ID transfers","❌ Complex Mass Creation: Difficult to automate large-scale ticket generation until more software tools available","❌ Lost Key Risk: If private keys are lost, ticket is permanently inaccessible","❌ Scalability Issues: Creating 1000s of tickets becomes trickier","❌ Technical Complexity: Requires blockchain interaction knowledge","❌ Time Dependency: Must wait for block confirmations","❌ Transaction Costs: Each ticket requires 2+ blockchain transactions","❌ Update Transaction Fees: Each transfer requires blockchain transaction","Cons","Pros"]},{"l":"Method B: Attestation-Based Tickets (Signed Data Objects)"},{"i":"overview-1","l":"Overview","p":["This method uses existing user identities and creates signed data objects (attestations) that represent tickets. The ticket office signs ticket data with their identity, creating a verifiable claim of ownership."]},{"i":"how-it-works-1","l":"How It Works"},{"i":"process-flow-2","l":"Process Flow:","p":["User Identity: Customer uses existing Verus ID (e.g., johnDoe@)","Ticket Creation: Ticket office creates signed data object off-chain","Digital Signature: Object signed by ticket office's ID at specific block height","Delivery: Signed ticket object sent to customer's wallet","Verification: Blockchain validates signature and ticket office identity"]},{"i":"technical-implementation-1","l":"Technical Implementation:"},{"i":"pros-and-cons-1","l":"Pros and Cons","p":["Pros","Cons","✅ Cost Effective: No blockchain transactions for ticket creation","❌ Transfer Complexity: Requires re-issuance for transfers","✅ Mass Creation: Easy to generate thousands of tickets offline","❌ Intermediary Dependency: Ticket office must facilitate transfers if change of personal details on ticket","✅ Instant Generation: No waiting for block confirmations","❌ Software Limitations: Current wallet apps need ticket-specific features","✅ Existing Infrastructure: Uses current attestation/claim systems","❌ Privacy Concerns: All recipient info needed at purchase time","✅ Flexible Data: Can contain any structured ticket information","❌ Limited Autonomy: Users can't independently transfer tickets","✅ Zero Knowledge: Supports ZK attestations and merkle proofs","❌ Trust Requirements: Relies on ticket office's continued operation","✅ Offline Capability: Tickets work without constant blockchain access"]},{"l":"Detailed Comparison Matrix","p":["(2+ transactions per ticket)","Aspect","Blockchain immutability","Blockchain transaction required","Challenging","Complete ownership control","Controlled by ticket office","Creation Cost","Currently supported","Dependent on ticket office, or new software to re-sign tickets","Dispute Resolution","Easy","High (blockchain interactions)","Highly scalable","Limited by blockchain throughput possibly","Low (off-chain creation)","Mass Distribution","Medium (signature verification)","Method A (ID as Ticket)","Method B (Signed Objects)","Natural peer-to-peer","Re-issuance by ticket office","Requires development","Requires ticket office arbitration","Scalability","Secondary Market","Technical Complexity","Transfer Method","User Autonomy","Wallet Support"]},{"l":"Use Case Scenarios"},{"l":"Large Venue Concert (10,000+ tickets)","p":["Method A Challenges:","~ 20,000 blockchain transactions needed","Time requirement: BAtched up transactions take hours","Infrastructure: Requires robust transaction management system","Method B Advantages:","Instant ticket generation","Near-zero marginal cost per ticket","Immediate distribution capability","Scalable to any event size"]},{"l":"Premium/VIP Tickets (Limited quantity, high value)","p":["Method A Advantages:","Provable scarcity and authenticity","Complete ownership rights","Resale market functionality","Collectible value potential","Method B Limitations:","Harder to prove uniqueness","Transfer restrictions may reduce value","Less suitable for collector markets"]},{"l":"Corporate Events (Internal distribution)","p":["Method A Considerations:","May be overkill for internal events","High setup cost for single-use events","Method B Benefits:","Quick deployment","Easy management","Cost-effective for one-time events","Simplified distribution to employee IDs"]},{"l":"Future Development Considerations"},{"l":"Software Requirements","p":["Method A:","Enhanced wallet transaction capabilities","Batch transaction processing","User-friendly ID management interfaces","Method B:","Ticket-specific wallet features","Transfer request systems","Enhanced attestation management","QR code integration improvements"]},{"l":"Technical Roadmap","p":["Short-term(2-4 weeks):","Basic ticket object support in wallets","Simple transfer request mechanisms","QR code ticket display","Medium-term(2-3 months):","Batch ID creation tools","Advanced ticket management features","Secondary market interfaces","Long-term(6-12 months):","Advanced software integration","Machine-readable ticket formats"]},{"l":"Economic Analysis"},{"l":"Revenue Model Implications","p":["Method A:","Higher operational costs may require premium pricing","Natural scarcity supports higher ticket values","Resale market generates ongoing network activity","Method B:","Lower operational costs enable competitive pricing","Centralized control over secondary markets","Reduced infrastructure investment requirements"]},{"l":"Security Analysis"},{"l":"Attack Vectors","p":["Method A Vulnerabilities:","Private key compromise (permanent ticket loss)","Replay attacks during transfers","Blockchain reorganization risks","Method A Mitigations:","Multi-signature ticket IDs","Confirmation requirements","Method B Vulnerabilities:","Ticket office key compromise (affects all tickets)","Signature replay attacks","Time-based signature validity issues","Method B Mitigations:","Key rotation policies","Height-based signature validation","Merkle tree attestations"]},{"l":"Regulatory and Compliance Considerations"},{"l":"Consumer Protection","p":["Method A:","Irreversible transactions may conflict with consumer rights","Clear ownership transfer documentation","Potential for permanent loss scenarios","Method B:","Ticket office retains some control for dispute resolution","More traditional ticketing compliance alignment","Easier refund/cancellation procedures"]},{"l":"Anti-Fraud Measures","p":["Method A:","Blockchain immutability prevents ticket duplication","Cryptographic proof of authenticity","Transparent ownership history","Method B:","Digital signatures prevent forgery","Centralized validation reduces fake tickets","Ticket office control enables quick response to fraud"]},{"l":"Conclusion","p":["Both methods offer distinct advantages for different use cases:","Method A (ID as Ticket) excels in scenarios requiring:","True decentralized ownership","High-value or collectible tickets","Secondary market functionality","Maximum user autonomy","Method B (Signed Objects) is optimal for:","Large-scale events","Cost-sensitive operations","Rapid deployment requirements","Traditional ticketing business models","The choice between methods should be based on specific event requirements, cost considerations, technical capabilities, and business model preferences. Many organizations may benefit from a hybrid approach, using Method B for general admission and Method A for premium or collectible tickets.","As the Verus ecosystem continues to evolve, improvements in wallet software, batch processing capabilities, and user interfaces will likely make both methods more accessible and practical for mainstream adoption.","This document represents a technical analysis as of September 2025. Verus protocol features and capabilities may evolve over time."]}],[{"l":"UX UI","p":["When using the Valu app the user will be introduced some new concepts which need to be presented in a intuative and logical way. This section aims to detail the main interaction flows the user is expected to perform to be able to use the ValuVerse."]}],[{"l":"Installing the Mobile wallet"},{"l":"Step 1 locating the download link","p":["TODO:","Create website Link for Valu Wallet download"]},{"l":"Step 2 Running the Mobile app","p":["TODO:","Define text that is presented on first install","Should password be mandated so strong?","Should the Seed word require a challenge at this point?"]}],[{"l":"Receiving a free ID"},{"l":"Getting a Free ID","p":["TODO:","Create website Link for Valu Wallet download","How should we get the QR Code to the user (Without the service being bale to be spammed)"]},{"l":"Step 2 Running the Mobile app","p":["TODO:","Define text that is presented on first install","Should password be mandated so strong?","Should the Seed word require a challenge at this point?"]}]]